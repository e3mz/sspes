//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.18444
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.Phone.ServiceReference, version 3.7.0.0
// 
namespace SspesClient.SspesService {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="User", Namespace="http://schemas.datacontract.org/2004/07/SspesRestService.Classes")]
    public partial class User : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Collections.ObjectModel.ObservableCollection<System.Guid> FriendsListField;
        
        private string PChanField;
        
        private string PasswordField;
        
        private System.Guid UserIdField;
        
        private string UserNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<System.Guid> FriendsList {
            get {
                return this.FriendsListField;
            }
            set {
                if ((object.ReferenceEquals(this.FriendsListField, value) != true)) {
                    this.FriendsListField = value;
                    this.RaisePropertyChanged("FriendsList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PChan {
            get {
                return this.PChanField;
            }
            set {
                if ((object.ReferenceEquals(this.PChanField, value) != true)) {
                    this.PChanField = value;
                    this.RaisePropertyChanged("PChan");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((this.UserIdField.Equals(value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Challenge", Namespace="http://schemas.datacontract.org/2004/07/SspesRestService.Classes")]
    public partial class Challenge : object, System.ComponentModel.INotifyPropertyChanged {
        
        private SspesClient.SspesService.User ChallengeFromField;
        
        private System.Guid ChallengeIdField;
        
        private SspesClient.SspesService.User ChallengeToField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SspesClient.SspesService.User ChallengeFrom {
            get {
                return this.ChallengeFromField;
            }
            set {
                if ((object.ReferenceEquals(this.ChallengeFromField, value) != true)) {
                    this.ChallengeFromField = value;
                    this.RaisePropertyChanged("ChallengeFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ChallengeId {
            get {
                return this.ChallengeIdField;
            }
            set {
                if ((this.ChallengeIdField.Equals(value) != true)) {
                    this.ChallengeIdField = value;
                    this.RaisePropertyChanged("ChallengeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SspesClient.SspesService.User ChallengeTo {
            get {
                return this.ChallengeToField;
            }
            set {
                if ((object.ReferenceEquals(this.ChallengeToField, value) != true)) {
                    this.ChallengeToField = value;
                    this.RaisePropertyChanged("ChallengeTo");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Battle", Namespace="http://schemas.datacontract.org/2004/07/SspesRestService.Classes")]
    public partial class Battle : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Guid BattleIdField;
        
        private SspesClient.SspesService.User player1Field;
        
        private string player1MoveField;
        
        private int player1ScoreField;
        
        private SspesClient.SspesService.User player2Field;
        
        private string player2MoveField;
        
        private int player2ScoreField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid BattleId {
            get {
                return this.BattleIdField;
            }
            set {
                if ((this.BattleIdField.Equals(value) != true)) {
                    this.BattleIdField = value;
                    this.RaisePropertyChanged("BattleId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SspesClient.SspesService.User player1 {
            get {
                return this.player1Field;
            }
            set {
                if ((object.ReferenceEquals(this.player1Field, value) != true)) {
                    this.player1Field = value;
                    this.RaisePropertyChanged("player1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string player1Move {
            get {
                return this.player1MoveField;
            }
            set {
                if ((object.ReferenceEquals(this.player1MoveField, value) != true)) {
                    this.player1MoveField = value;
                    this.RaisePropertyChanged("player1Move");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int player1Score {
            get {
                return this.player1ScoreField;
            }
            set {
                if ((this.player1ScoreField.Equals(value) != true)) {
                    this.player1ScoreField = value;
                    this.RaisePropertyChanged("player1Score");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SspesClient.SspesService.User player2 {
            get {
                return this.player2Field;
            }
            set {
                if ((object.ReferenceEquals(this.player2Field, value) != true)) {
                    this.player2Field = value;
                    this.RaisePropertyChanged("player2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string player2Move {
            get {
                return this.player2MoveField;
            }
            set {
                if ((object.ReferenceEquals(this.player2MoveField, value) != true)) {
                    this.player2MoveField = value;
                    this.RaisePropertyChanged("player2Move");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int player2Score {
            get {
                return this.player2ScoreField;
            }
            set {
                if ((this.player2ScoreField.Equals(value) != true)) {
                    this.player2ScoreField = value;
                    this.RaisePropertyChanged("player2Score");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SspesService.ISspesService")]
    public interface ISspesService {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ISspesService/login", ReplyAction="http://tempuri.org/ISspesService/loginResponse")]
        System.IAsyncResult Beginlogin(SspesClient.SspesService.User user, System.AsyncCallback callback, object asyncState);
        
        SspesClient.SspesService.User Endlogin(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ISspesService/register", ReplyAction="http://tempuri.org/ISspesService/registerResponse")]
        System.IAsyncResult Beginregister(SspesClient.SspesService.User user, System.AsyncCallback callback, object asyncState);
        
        SspesClient.SspesService.User Endregister(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ISspesService/getAllUsers", ReplyAction="http://tempuri.org/ISspesService/getAllUsersResponse")]
        System.IAsyncResult BegingetAllUsers(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<SspesClient.SspesService.User> EndgetAllUsers(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ISspesService/challenge", ReplyAction="http://tempuri.org/ISspesService/challengeResponse")]
        System.IAsyncResult Beginchallenge(SspesClient.SspesService.Challenge challenge, System.AsyncCallback callback, object asyncState);
        
        bool Endchallenge(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ISspesService/updateUser", ReplyAction="http://tempuri.org/ISspesService/updateUserResponse")]
        System.IAsyncResult BeginupdateUser(SspesClient.SspesService.User friend, System.AsyncCallback callback, object asyncState);
        
        bool EndupdateUser(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ISspesService/getAllBattlesForUser", ReplyAction="http://tempuri.org/ISspesService/getAllBattlesForUserResponse")]
        System.IAsyncResult BegingetAllBattlesForUser(System.Guid userId, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<SspesClient.SspesService.Battle> EndgetAllBattlesForUser(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ISspesService/playerMove", ReplyAction="http://tempuri.org/ISspesService/playerMoveResponse")]
        System.IAsyncResult BeginplayerMove(string move, System.Guid playerId, System.Guid battleId, System.AsyncCallback callback, object asyncState);
        
        bool EndplayerMove(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ISspesService/getFriendsById", ReplyAction="http://tempuri.org/ISspesService/getFriendsByIdResponse")]
        System.IAsyncResult BegingetFriendsById(string userId, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<SspesClient.SspesService.User> EndgetFriendsById(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ISspesService/addFriend", ReplyAction="http://tempuri.org/ISspesService/addFriendResponse")]
        System.IAsyncResult BeginaddFriend(string userId, string friendUserName, System.AsyncCallback callback, object asyncState);
        
        SspesClient.SspesService.User EndaddFriend(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISspesServiceChannel : SspesClient.SspesService.ISspesService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class loginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public loginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public SspesClient.SspesService.User Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((SspesClient.SspesService.User)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class registerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public registerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public SspesClient.SspesService.User Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((SspesClient.SspesService.User)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class getAllUsersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public getAllUsersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<SspesClient.SspesService.User> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<SspesClient.SspesService.User>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class challengeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public challengeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class updateUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public updateUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class getAllBattlesForUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public getAllBattlesForUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<SspesClient.SspesService.Battle> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<SspesClient.SspesService.Battle>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class playerMoveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public playerMoveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class getFriendsByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public getFriendsByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<SspesClient.SspesService.User> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<SspesClient.SspesService.User>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class addFriendCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public addFriendCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public SspesClient.SspesService.User Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((SspesClient.SspesService.User)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SspesServiceClient : System.ServiceModel.ClientBase<SspesClient.SspesService.ISspesService>, SspesClient.SspesService.ISspesService {
        
        private BeginOperationDelegate onBeginloginDelegate;
        
        private EndOperationDelegate onEndloginDelegate;
        
        private System.Threading.SendOrPostCallback onloginCompletedDelegate;
        
        private BeginOperationDelegate onBeginregisterDelegate;
        
        private EndOperationDelegate onEndregisterDelegate;
        
        private System.Threading.SendOrPostCallback onregisterCompletedDelegate;
        
        private BeginOperationDelegate onBegingetAllUsersDelegate;
        
        private EndOperationDelegate onEndgetAllUsersDelegate;
        
        private System.Threading.SendOrPostCallback ongetAllUsersCompletedDelegate;
        
        private BeginOperationDelegate onBeginchallengeDelegate;
        
        private EndOperationDelegate onEndchallengeDelegate;
        
        private System.Threading.SendOrPostCallback onchallengeCompletedDelegate;
        
        private BeginOperationDelegate onBeginupdateUserDelegate;
        
        private EndOperationDelegate onEndupdateUserDelegate;
        
        private System.Threading.SendOrPostCallback onupdateUserCompletedDelegate;
        
        private BeginOperationDelegate onBegingetAllBattlesForUserDelegate;
        
        private EndOperationDelegate onEndgetAllBattlesForUserDelegate;
        
        private System.Threading.SendOrPostCallback ongetAllBattlesForUserCompletedDelegate;
        
        private BeginOperationDelegate onBeginplayerMoveDelegate;
        
        private EndOperationDelegate onEndplayerMoveDelegate;
        
        private System.Threading.SendOrPostCallback onplayerMoveCompletedDelegate;
        
        private BeginOperationDelegate onBegingetFriendsByIdDelegate;
        
        private EndOperationDelegate onEndgetFriendsByIdDelegate;
        
        private System.Threading.SendOrPostCallback ongetFriendsByIdCompletedDelegate;
        
        private BeginOperationDelegate onBeginaddFriendDelegate;
        
        private EndOperationDelegate onEndaddFriendDelegate;
        
        private System.Threading.SendOrPostCallback onaddFriendCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public SspesServiceClient() {
        }
        
        public SspesServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SspesServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SspesServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SspesServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<loginCompletedEventArgs> loginCompleted;
        
        public event System.EventHandler<registerCompletedEventArgs> registerCompleted;
        
        public event System.EventHandler<getAllUsersCompletedEventArgs> getAllUsersCompleted;
        
        public event System.EventHandler<challengeCompletedEventArgs> challengeCompleted;
        
        public event System.EventHandler<updateUserCompletedEventArgs> updateUserCompleted;
        
        public event System.EventHandler<getAllBattlesForUserCompletedEventArgs> getAllBattlesForUserCompleted;
        
        public event System.EventHandler<playerMoveCompletedEventArgs> playerMoveCompleted;
        
        public event System.EventHandler<getFriendsByIdCompletedEventArgs> getFriendsByIdCompleted;
        
        public event System.EventHandler<addFriendCompletedEventArgs> addFriendCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SspesClient.SspesService.ISspesService.Beginlogin(SspesClient.SspesService.User user, System.AsyncCallback callback, object asyncState) {
            return base.Channel.Beginlogin(user, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        SspesClient.SspesService.User SspesClient.SspesService.ISspesService.Endlogin(System.IAsyncResult result) {
            return base.Channel.Endlogin(result);
        }
        
        private System.IAsyncResult OnBeginlogin(object[] inValues, System.AsyncCallback callback, object asyncState) {
            SspesClient.SspesService.User user = ((SspesClient.SspesService.User)(inValues[0]));
            return ((SspesClient.SspesService.ISspesService)(this)).Beginlogin(user, callback, asyncState);
        }
        
        private object[] OnEndlogin(System.IAsyncResult result) {
            SspesClient.SspesService.User retVal = ((SspesClient.SspesService.ISspesService)(this)).Endlogin(result);
            return new object[] {
                    retVal};
        }
        
        private void OnloginCompleted(object state) {
            if ((this.loginCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.loginCompleted(this, new loginCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void loginAsync(SspesClient.SspesService.User user) {
            this.loginAsync(user, null);
        }
        
        public void loginAsync(SspesClient.SspesService.User user, object userState) {
            if ((this.onBeginloginDelegate == null)) {
                this.onBeginloginDelegate = new BeginOperationDelegate(this.OnBeginlogin);
            }
            if ((this.onEndloginDelegate == null)) {
                this.onEndloginDelegate = new EndOperationDelegate(this.OnEndlogin);
            }
            if ((this.onloginCompletedDelegate == null)) {
                this.onloginCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnloginCompleted);
            }
            base.InvokeAsync(this.onBeginloginDelegate, new object[] {
                        user}, this.onEndloginDelegate, this.onloginCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SspesClient.SspesService.ISspesService.Beginregister(SspesClient.SspesService.User user, System.AsyncCallback callback, object asyncState) {
            return base.Channel.Beginregister(user, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        SspesClient.SspesService.User SspesClient.SspesService.ISspesService.Endregister(System.IAsyncResult result) {
            return base.Channel.Endregister(result);
        }
        
        private System.IAsyncResult OnBeginregister(object[] inValues, System.AsyncCallback callback, object asyncState) {
            SspesClient.SspesService.User user = ((SspesClient.SspesService.User)(inValues[0]));
            return ((SspesClient.SspesService.ISspesService)(this)).Beginregister(user, callback, asyncState);
        }
        
        private object[] OnEndregister(System.IAsyncResult result) {
            SspesClient.SspesService.User retVal = ((SspesClient.SspesService.ISspesService)(this)).Endregister(result);
            return new object[] {
                    retVal};
        }
        
        private void OnregisterCompleted(object state) {
            if ((this.registerCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.registerCompleted(this, new registerCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void registerAsync(SspesClient.SspesService.User user) {
            this.registerAsync(user, null);
        }
        
        public void registerAsync(SspesClient.SspesService.User user, object userState) {
            if ((this.onBeginregisterDelegate == null)) {
                this.onBeginregisterDelegate = new BeginOperationDelegate(this.OnBeginregister);
            }
            if ((this.onEndregisterDelegate == null)) {
                this.onEndregisterDelegate = new EndOperationDelegate(this.OnEndregister);
            }
            if ((this.onregisterCompletedDelegate == null)) {
                this.onregisterCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnregisterCompleted);
            }
            base.InvokeAsync(this.onBeginregisterDelegate, new object[] {
                        user}, this.onEndregisterDelegate, this.onregisterCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SspesClient.SspesService.ISspesService.BegingetAllUsers(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BegingetAllUsers(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<SspesClient.SspesService.User> SspesClient.SspesService.ISspesService.EndgetAllUsers(System.IAsyncResult result) {
            return base.Channel.EndgetAllUsers(result);
        }
        
        private System.IAsyncResult OnBegingetAllUsers(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((SspesClient.SspesService.ISspesService)(this)).BegingetAllUsers(callback, asyncState);
        }
        
        private object[] OnEndgetAllUsers(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<SspesClient.SspesService.User> retVal = ((SspesClient.SspesService.ISspesService)(this)).EndgetAllUsers(result);
            return new object[] {
                    retVal};
        }
        
        private void OngetAllUsersCompleted(object state) {
            if ((this.getAllUsersCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.getAllUsersCompleted(this, new getAllUsersCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void getAllUsersAsync() {
            this.getAllUsersAsync(null);
        }
        
        public void getAllUsersAsync(object userState) {
            if ((this.onBegingetAllUsersDelegate == null)) {
                this.onBegingetAllUsersDelegate = new BeginOperationDelegate(this.OnBegingetAllUsers);
            }
            if ((this.onEndgetAllUsersDelegate == null)) {
                this.onEndgetAllUsersDelegate = new EndOperationDelegate(this.OnEndgetAllUsers);
            }
            if ((this.ongetAllUsersCompletedDelegate == null)) {
                this.ongetAllUsersCompletedDelegate = new System.Threading.SendOrPostCallback(this.OngetAllUsersCompleted);
            }
            base.InvokeAsync(this.onBegingetAllUsersDelegate, null, this.onEndgetAllUsersDelegate, this.ongetAllUsersCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SspesClient.SspesService.ISspesService.Beginchallenge(SspesClient.SspesService.Challenge challenge, System.AsyncCallback callback, object asyncState) {
            return base.Channel.Beginchallenge(challenge, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool SspesClient.SspesService.ISspesService.Endchallenge(System.IAsyncResult result) {
            return base.Channel.Endchallenge(result);
        }
        
        private System.IAsyncResult OnBeginchallenge(object[] inValues, System.AsyncCallback callback, object asyncState) {
            SspesClient.SspesService.Challenge challenge = ((SspesClient.SspesService.Challenge)(inValues[0]));
            return ((SspesClient.SspesService.ISspesService)(this)).Beginchallenge(challenge, callback, asyncState);
        }
        
        private object[] OnEndchallenge(System.IAsyncResult result) {
            bool retVal = ((SspesClient.SspesService.ISspesService)(this)).Endchallenge(result);
            return new object[] {
                    retVal};
        }
        
        private void OnchallengeCompleted(object state) {
            if ((this.challengeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.challengeCompleted(this, new challengeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void challengeAsync(SspesClient.SspesService.Challenge challenge) {
            this.challengeAsync(challenge, null);
        }
        
        public void challengeAsync(SspesClient.SspesService.Challenge challenge, object userState) {
            if ((this.onBeginchallengeDelegate == null)) {
                this.onBeginchallengeDelegate = new BeginOperationDelegate(this.OnBeginchallenge);
            }
            if ((this.onEndchallengeDelegate == null)) {
                this.onEndchallengeDelegate = new EndOperationDelegate(this.OnEndchallenge);
            }
            if ((this.onchallengeCompletedDelegate == null)) {
                this.onchallengeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnchallengeCompleted);
            }
            base.InvokeAsync(this.onBeginchallengeDelegate, new object[] {
                        challenge}, this.onEndchallengeDelegate, this.onchallengeCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SspesClient.SspesService.ISspesService.BeginupdateUser(SspesClient.SspesService.User friend, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginupdateUser(friend, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool SspesClient.SspesService.ISspesService.EndupdateUser(System.IAsyncResult result) {
            return base.Channel.EndupdateUser(result);
        }
        
        private System.IAsyncResult OnBeginupdateUser(object[] inValues, System.AsyncCallback callback, object asyncState) {
            SspesClient.SspesService.User friend = ((SspesClient.SspesService.User)(inValues[0]));
            return ((SspesClient.SspesService.ISspesService)(this)).BeginupdateUser(friend, callback, asyncState);
        }
        
        private object[] OnEndupdateUser(System.IAsyncResult result) {
            bool retVal = ((SspesClient.SspesService.ISspesService)(this)).EndupdateUser(result);
            return new object[] {
                    retVal};
        }
        
        private void OnupdateUserCompleted(object state) {
            if ((this.updateUserCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.updateUserCompleted(this, new updateUserCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void updateUserAsync(SspesClient.SspesService.User friend) {
            this.updateUserAsync(friend, null);
        }
        
        public void updateUserAsync(SspesClient.SspesService.User friend, object userState) {
            if ((this.onBeginupdateUserDelegate == null)) {
                this.onBeginupdateUserDelegate = new BeginOperationDelegate(this.OnBeginupdateUser);
            }
            if ((this.onEndupdateUserDelegate == null)) {
                this.onEndupdateUserDelegate = new EndOperationDelegate(this.OnEndupdateUser);
            }
            if ((this.onupdateUserCompletedDelegate == null)) {
                this.onupdateUserCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnupdateUserCompleted);
            }
            base.InvokeAsync(this.onBeginupdateUserDelegate, new object[] {
                        friend}, this.onEndupdateUserDelegate, this.onupdateUserCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SspesClient.SspesService.ISspesService.BegingetAllBattlesForUser(System.Guid userId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BegingetAllBattlesForUser(userId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<SspesClient.SspesService.Battle> SspesClient.SspesService.ISspesService.EndgetAllBattlesForUser(System.IAsyncResult result) {
            return base.Channel.EndgetAllBattlesForUser(result);
        }
        
        private System.IAsyncResult OnBegingetAllBattlesForUser(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid userId = ((System.Guid)(inValues[0]));
            return ((SspesClient.SspesService.ISspesService)(this)).BegingetAllBattlesForUser(userId, callback, asyncState);
        }
        
        private object[] OnEndgetAllBattlesForUser(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<SspesClient.SspesService.Battle> retVal = ((SspesClient.SspesService.ISspesService)(this)).EndgetAllBattlesForUser(result);
            return new object[] {
                    retVal};
        }
        
        private void OngetAllBattlesForUserCompleted(object state) {
            if ((this.getAllBattlesForUserCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.getAllBattlesForUserCompleted(this, new getAllBattlesForUserCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void getAllBattlesForUserAsync(System.Guid userId) {
            this.getAllBattlesForUserAsync(userId, null);
        }
        
        public void getAllBattlesForUserAsync(System.Guid userId, object userState) {
            if ((this.onBegingetAllBattlesForUserDelegate == null)) {
                this.onBegingetAllBattlesForUserDelegate = new BeginOperationDelegate(this.OnBegingetAllBattlesForUser);
            }
            if ((this.onEndgetAllBattlesForUserDelegate == null)) {
                this.onEndgetAllBattlesForUserDelegate = new EndOperationDelegate(this.OnEndgetAllBattlesForUser);
            }
            if ((this.ongetAllBattlesForUserCompletedDelegate == null)) {
                this.ongetAllBattlesForUserCompletedDelegate = new System.Threading.SendOrPostCallback(this.OngetAllBattlesForUserCompleted);
            }
            base.InvokeAsync(this.onBegingetAllBattlesForUserDelegate, new object[] {
                        userId}, this.onEndgetAllBattlesForUserDelegate, this.ongetAllBattlesForUserCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SspesClient.SspesService.ISspesService.BeginplayerMove(string move, System.Guid playerId, System.Guid battleId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginplayerMove(move, playerId, battleId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool SspesClient.SspesService.ISspesService.EndplayerMove(System.IAsyncResult result) {
            return base.Channel.EndplayerMove(result);
        }
        
        private System.IAsyncResult OnBeginplayerMove(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string move = ((string)(inValues[0]));
            System.Guid playerId = ((System.Guid)(inValues[1]));
            System.Guid battleId = ((System.Guid)(inValues[2]));
            return ((SspesClient.SspesService.ISspesService)(this)).BeginplayerMove(move, playerId, battleId, callback, asyncState);
        }
        
        private object[] OnEndplayerMove(System.IAsyncResult result) {
            bool retVal = ((SspesClient.SspesService.ISspesService)(this)).EndplayerMove(result);
            return new object[] {
                    retVal};
        }
        
        private void OnplayerMoveCompleted(object state) {
            if ((this.playerMoveCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.playerMoveCompleted(this, new playerMoveCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void playerMoveAsync(string move, System.Guid playerId, System.Guid battleId) {
            this.playerMoveAsync(move, playerId, battleId, null);
        }
        
        public void playerMoveAsync(string move, System.Guid playerId, System.Guid battleId, object userState) {
            if ((this.onBeginplayerMoveDelegate == null)) {
                this.onBeginplayerMoveDelegate = new BeginOperationDelegate(this.OnBeginplayerMove);
            }
            if ((this.onEndplayerMoveDelegate == null)) {
                this.onEndplayerMoveDelegate = new EndOperationDelegate(this.OnEndplayerMove);
            }
            if ((this.onplayerMoveCompletedDelegate == null)) {
                this.onplayerMoveCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnplayerMoveCompleted);
            }
            base.InvokeAsync(this.onBeginplayerMoveDelegate, new object[] {
                        move,
                        playerId,
                        battleId}, this.onEndplayerMoveDelegate, this.onplayerMoveCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SspesClient.SspesService.ISspesService.BegingetFriendsById(string userId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BegingetFriendsById(userId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<SspesClient.SspesService.User> SspesClient.SspesService.ISspesService.EndgetFriendsById(System.IAsyncResult result) {
            return base.Channel.EndgetFriendsById(result);
        }
        
        private System.IAsyncResult OnBegingetFriendsById(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string userId = ((string)(inValues[0]));
            return ((SspesClient.SspesService.ISspesService)(this)).BegingetFriendsById(userId, callback, asyncState);
        }
        
        private object[] OnEndgetFriendsById(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<SspesClient.SspesService.User> retVal = ((SspesClient.SspesService.ISspesService)(this)).EndgetFriendsById(result);
            return new object[] {
                    retVal};
        }
        
        private void OngetFriendsByIdCompleted(object state) {
            if ((this.getFriendsByIdCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.getFriendsByIdCompleted(this, new getFriendsByIdCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void getFriendsByIdAsync(string userId) {
            this.getFriendsByIdAsync(userId, null);
        }
        
        public void getFriendsByIdAsync(string userId, object userState) {
            if ((this.onBegingetFriendsByIdDelegate == null)) {
                this.onBegingetFriendsByIdDelegate = new BeginOperationDelegate(this.OnBegingetFriendsById);
            }
            if ((this.onEndgetFriendsByIdDelegate == null)) {
                this.onEndgetFriendsByIdDelegate = new EndOperationDelegate(this.OnEndgetFriendsById);
            }
            if ((this.ongetFriendsByIdCompletedDelegate == null)) {
                this.ongetFriendsByIdCompletedDelegate = new System.Threading.SendOrPostCallback(this.OngetFriendsByIdCompleted);
            }
            base.InvokeAsync(this.onBegingetFriendsByIdDelegate, new object[] {
                        userId}, this.onEndgetFriendsByIdDelegate, this.ongetFriendsByIdCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SspesClient.SspesService.ISspesService.BeginaddFriend(string userId, string friendUserName, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginaddFriend(userId, friendUserName, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        SspesClient.SspesService.User SspesClient.SspesService.ISspesService.EndaddFriend(System.IAsyncResult result) {
            return base.Channel.EndaddFriend(result);
        }
        
        private System.IAsyncResult OnBeginaddFriend(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string userId = ((string)(inValues[0]));
            string friendUserName = ((string)(inValues[1]));
            return ((SspesClient.SspesService.ISspesService)(this)).BeginaddFriend(userId, friendUserName, callback, asyncState);
        }
        
        private object[] OnEndaddFriend(System.IAsyncResult result) {
            SspesClient.SspesService.User retVal = ((SspesClient.SspesService.ISspesService)(this)).EndaddFriend(result);
            return new object[] {
                    retVal};
        }
        
        private void OnaddFriendCompleted(object state) {
            if ((this.addFriendCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.addFriendCompleted(this, new addFriendCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void addFriendAsync(string userId, string friendUserName) {
            this.addFriendAsync(userId, friendUserName, null);
        }
        
        public void addFriendAsync(string userId, string friendUserName, object userState) {
            if ((this.onBeginaddFriendDelegate == null)) {
                this.onBeginaddFriendDelegate = new BeginOperationDelegate(this.OnBeginaddFriend);
            }
            if ((this.onEndaddFriendDelegate == null)) {
                this.onEndaddFriendDelegate = new EndOperationDelegate(this.OnEndaddFriend);
            }
            if ((this.onaddFriendCompletedDelegate == null)) {
                this.onaddFriendCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnaddFriendCompleted);
            }
            base.InvokeAsync(this.onBeginaddFriendDelegate, new object[] {
                        userId,
                        friendUserName}, this.onEndaddFriendDelegate, this.onaddFriendCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override SspesClient.SspesService.ISspesService CreateChannel() {
            return new SspesServiceClientChannel(this);
        }
        
        private class SspesServiceClientChannel : ChannelBase<SspesClient.SspesService.ISspesService>, SspesClient.SspesService.ISspesService {
            
            public SspesServiceClientChannel(System.ServiceModel.ClientBase<SspesClient.SspesService.ISspesService> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult Beginlogin(SspesClient.SspesService.User user, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = user;
                System.IAsyncResult _result = base.BeginInvoke("login", _args, callback, asyncState);
                return _result;
            }
            
            public SspesClient.SspesService.User Endlogin(System.IAsyncResult result) {
                object[] _args = new object[0];
                SspesClient.SspesService.User _result = ((SspesClient.SspesService.User)(base.EndInvoke("login", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult Beginregister(SspesClient.SspesService.User user, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = user;
                System.IAsyncResult _result = base.BeginInvoke("register", _args, callback, asyncState);
                return _result;
            }
            
            public SspesClient.SspesService.User Endregister(System.IAsyncResult result) {
                object[] _args = new object[0];
                SspesClient.SspesService.User _result = ((SspesClient.SspesService.User)(base.EndInvoke("register", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BegingetAllUsers(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("getAllUsers", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<SspesClient.SspesService.User> EndgetAllUsers(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<SspesClient.SspesService.User> _result = ((System.Collections.ObjectModel.ObservableCollection<SspesClient.SspesService.User>)(base.EndInvoke("getAllUsers", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult Beginchallenge(SspesClient.SspesService.Challenge challenge, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = challenge;
                System.IAsyncResult _result = base.BeginInvoke("challenge", _args, callback, asyncState);
                return _result;
            }
            
            public bool Endchallenge(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("challenge", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginupdateUser(SspesClient.SspesService.User friend, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = friend;
                System.IAsyncResult _result = base.BeginInvoke("updateUser", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndupdateUser(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("updateUser", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BegingetAllBattlesForUser(System.Guid userId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = userId;
                System.IAsyncResult _result = base.BeginInvoke("getAllBattlesForUser", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<SspesClient.SspesService.Battle> EndgetAllBattlesForUser(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<SspesClient.SspesService.Battle> _result = ((System.Collections.ObjectModel.ObservableCollection<SspesClient.SspesService.Battle>)(base.EndInvoke("getAllBattlesForUser", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginplayerMove(string move, System.Guid playerId, System.Guid battleId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = move;
                _args[1] = playerId;
                _args[2] = battleId;
                System.IAsyncResult _result = base.BeginInvoke("playerMove", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndplayerMove(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("playerMove", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BegingetFriendsById(string userId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = userId;
                System.IAsyncResult _result = base.BeginInvoke("getFriendsById", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<SspesClient.SspesService.User> EndgetFriendsById(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<SspesClient.SspesService.User> _result = ((System.Collections.ObjectModel.ObservableCollection<SspesClient.SspesService.User>)(base.EndInvoke("getFriendsById", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginaddFriend(string userId, string friendUserName, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = userId;
                _args[1] = friendUserName;
                System.IAsyncResult _result = base.BeginInvoke("addFriend", _args, callback, asyncState);
                return _result;
            }
            
            public SspesClient.SspesService.User EndaddFriend(System.IAsyncResult result) {
                object[] _args = new object[0];
                SspesClient.SspesService.User _result = ((SspesClient.SspesService.User)(base.EndInvoke("addFriend", _args, result)));
                return _result;
            }
        }
    }
}
